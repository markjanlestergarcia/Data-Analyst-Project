-- SQL Project: Data Cleaning (World Layoffs Dataset from Kaggle)

-- Step 0: Create a staging table to preserve raw data
CREATE TABLE world_layoffs.layoffs_staging AS
SELECT *
FROM world_layoffs.layoffs;

-- ======================================================
-- STEP 1: Remove Duplicates
-- ======================================================

-- Identify duplicates with ROW_NUMBER()
WITH duplicate_check AS (
    SELECT *,
           ROW_NUMBER() OVER (
               PARTITION BY company, location, industry, total_laid_off,
                            percentage_laid_off, `date`, stage, country, funds_raised_millions
               ORDER BY company
           ) AS row_num
    FROM world_layoffs.layoffs_staging
)
DELETE FROM world_layoffs.layoffs_staging
WHERE (company, location, industry, total_laid_off,
       percentage_laid_off, `date`, stage, country, funds_raised_millions, row_num)
      IN (SELECT company, location, industry, total_laid_off,
                 percentage_laid_off, `date`, stage, country, funds_raised_millions, row_num
          FROM duplicate_check
          WHERE row_num > 1);

-- ======================================================
-- STEP 2: Standardize Data
-- ======================================================

-- Replace blank industries with NULL
UPDATE world_layoffs.layoffs_staging
SET industry = NULL
WHERE industry = '';

-- Fill NULL industries using other rows of the same company
UPDATE t1
JOIN world_layoffs.layoffs_staging t2
  ON t1.company = t2.company
SET t1.industry = t2.industry
WHERE t1.industry IS NULL
  AND t2.industry IS NOT NULL;

-- Standardize "Crypto" variations
UPDATE world_layoffs.layoffs_staging
SET industry = 'Crypto'
WHERE industry IN ('Crypto Currency', 'CryptoCurrency');

-- Standardize country names (remove trailing periods)
UPDATE world_layoffs.layoffs_staging
SET country = TRIM(TRAILING '.' FROM country);

-- Fix date format
UPDATE world_layoffs.layoffs_staging
SET `date` = STR_TO_DATE(`date`, '%m/%d/%Y');

ALTER TABLE world_layoffs.layoffs_staging
MODIFY COLUMN `date` DATE;

-- ======================================================
-- STEP 3: Handle Null Values
-- ======================================================
-- Keep NULLs in numeric columns (theyâ€™re useful for analysis)
-- No changes needed here

-- ======================================================
-- STEP 4: Remove Useless Rows & Columns
-- ======================================================

-- Delete rows where both total_laid_off and percentage_laid_off are NULL
DELETE
FROM world_layoffs.layoffs_staging
WHERE total_laid_off IS NULL
  AND percentage_laid_off IS NULL;

-- If you created helper columns (like row_num), drop them
-- ALTER TABLE world_layoffs.layoffs_staging DROP COLUMN row_num;

-- Final cleaned data
SELECT *
FROM world_layoffs.layoffs_staging;
